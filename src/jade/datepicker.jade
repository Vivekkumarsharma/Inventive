extends ./layout.jade

block title
  title Datepicker

block leftcontent
  h3 &nbsp; 
  - var items = [ "Basic Input Element", "Collapse horizontal space" ,"Control input size","Append and Prepend buttons","Legend Fieldset", "Radios and Checkboxes" ]
  +top_left(items)
   
block content
  
  h2 Example
  
  p Attached to a field with the format specified via options.
  .well.field
    input#dp1.input(type='text', value='02-16-2012')
  
  
  p Attachet to a field with the format specified via data tag.
  .well
    input#dp2.input(type='text', value='02/16/12', data-date-format='mm/dd/yy')
  
  
  p As component.
  .well
    #dp3.input-append.date(data-date='12-02-2012', data-date-format='dd-mm-yyyy')
      input.input(size='16', type='text', value='12-02-2012', class="width-per-20 input", readonly='readonly')
      span.width-per-5.button.append.right.add-on
        i.icon-calendar
    .clear-both 
        
  p Start with years viewMode.
  .well
    #dpYears.input-append.date(data-date='12-02-2012', data-date-format='dd-mm-yyyy', data-date-viewmode='years')
      input.span2(size='16', type='text', value='12-02-2012',class="width-per-20 input",  readonly='readonly')
      span.width-per-5.button.append.right.add-on
        i.icon-calendar
    .clear-both 
    
  p Limit the view mode to months
  .well
    #dpMonths.input-append.date(data-date='102/2012', data-date-format='mm/yyyy', data-date-viewmode='years', data-date-minviewmode='months')
      input.span2(size='16', type='text', value='02/2012', class="width-per-20 input", readonly='readonly')
      span.width-per-5.button.append.right.add-on
        i.icon-calendar
    .clear-both
  p
    | Attached to other elment then field and using events to work with the date values.
  .well
    #alert.alert.alert-error
      strong Oh snap!
    table.table
      thead
        tr
          th
            | Start date 
            a#dp4.button(href='#', data-date-format='yyyy-mm-dd', data-date='2012-02-20') Change
          th
            | End date 
            a#dp5.button(href='#', data-date-format='yyyy-mm-dd', data-date='2012-02-25') Change
      tbody
        tr
          td#startDate 2012-02-20
          td#endDate 2012-02-25
  p Disabling dates in the past and dependent disabling.
  .well
    table.table.field
      thead
        tr
          th
            | Check in:
            input#dpd1.input(type='text', value='')
          th
            | Check out:
            input#dpd2.input(type='text', value='')
              
  hr
  h2 Using datepicker.js
  p Call the datepicker via javascript:
              
  h3 Options
  table.table.bordered.zebra.rounded
    thead
      tr
        th(style='width: 100px;') Name
        th(style='width: 50px;') type
        th(style='width: 100px;') default
        th description
    tbody
      tr
        td format
        td string
        td 'mm/dd/yyyy'
        td the date format, combination of  d, dd, m, mm, yy, yyy.
      tr
        td weekStart
        td integer
        td 0
        td day of the week start. 0 for Sunday -  6 for Saturday
      tr
        td viewMode
        td string|integer
        td 0 = 'days'
        td
          | set the start view mode. Accepts: 'days', 'months', 'years', 0 for days, 1 for months and 2 for years
      tr
        td minViewMode
        td string|integer
        td 0 = 'days'
        td
          | set a limit for view mode. Accepts: 'days', 'months', 'years', 0 for days, 1 for months and 2 for years
  h3 Markup
 
                  
  h3 Methods
  h4 .datepicker(options)
  p.info Initializes an datepicker.
  h4 .datepicker('show')
  p.info Show the datepicker.
  h4 .datepicker('hide')
  p.info Hide the datepicker.
  h4 .datepicker('place')
  p.info Updates the date picker's position relative to the element
  h4 .datepicker('setValue', value)
  p.info
    | Set a new value for the datepicker. It cand be a string in the specified format or a Date object.
  h3 Events
  p.info Datepicker class exposes a few events for manipulating the dates.
  table.table.bordered.zebra.rounded
    thead
      tr
        th(style='width: 150px;') Event
        th Description
    tbody
      tr
        td show
        td This event fires immediately when the date picker is displayed.
      tr
        td hide
        td This event is fired immediately when the date picker is hidden.
      tr
        td changeDate
        td This event is fired when the date is changed.
      tr
        td onRender
        td This event is fired when a day is rendered inside the datepicker. Should return a string. Return 'disabled' to disable the day from being selected

  
  script(type="text/javascript").           
    if (top.location != location) {
      top.location.href = document.location.href ;
    }
    $(function(){
  
      $('#dp1').datepicker({
          format: 'mm-dd-yyyy'
      });
      $('#dp2').datepicker();
      $('#dp3').datepicker();
      $('#dp3').datepicker();
      $('#dpYears').datepicker();
      $('#dpMonths').datepicker();
      var startDate = new Date(2012,1,20);
      var endDate = new Date(2012,1,25);
      
      $('#dp4').datepicker()
      .on('changeDate', function(ev){
          if (ev.date.valueOf() > endDate.valueOf()){
              $('#alert').show().find('strong').text('The start date can not be greater then the end date');
          }
          else
          {
              $('#alert').hide();
              startDate = new Date(ev.date);
              $('#startDate').text($('#dp4').data('date'));
          }
          $('#dp4').datepicker('hide');
      });
      $('#dp5').datepicker()
      .on('changeDate', function(ev){
          if (ev.date.valueOf() < startDate.valueOf()){
              $('#alert').show().find('strong').text('The end date can not be less then the start date');
              } else {
              $('#alert').hide();
              endDate = new Date(ev.date);
              $('#endDate').text($('#dp5').data('date'));
          }
          $('#dp5').datepicker('hide');
      });
      // disabling dates
      var nowTemp = new Date();
      var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
      var checkin = $('#dpd1').datepicker({
          onRender: function(date) {
              return date.valueOf() < now.valueOf() ? 'disabled' : '';
          }
          }).on('changeDate', function(ev) {
          if (ev.date.valueOf() > checkout.date.valueOf()) {
              var newDate = new Date(ev.date)
              newDate.setDate(newDate.getDate() + 1);
              checkout.setValue(newDate);
          }
          checkin.hide();
          $('#dpd2')[0].focus();
      }).data('datepicker');
      var checkout = $('#dpd2').datepicker({
          onRender: function(date) {
              return date.valueOf() <= checkin.date.valueOf() ? 'disabled' : '';
          }
          }).on('changeDate', function(ev) {
          checkout.hide();
      }).data('datepicker');
    });
  
